{"version":3,"sources":["reducers/index.js","serviceWorker.js","components/input/InputBox.js","components/buttons/PrimaryButton.js","api/userService.js","components/input/validateInput.js","components/signup/UserSignupPage.js","actions/index.js","actions/types.js","components/signup/VendorSignupPersonalDetailPage.js","components/signup/VendorSignupVendorDetailPage.js","components/signup/WizardForm.js","components/login/LoginPage.js","components/header/HeaderComponent.js","components/foodCard/FoodCard.js","components/home/HomePage.js","components/App.js","index.js"],"names":["combineReducers","userServicePostRequests","state","arguments","length","undefined","action","type","payload","vendorSignUpPageChange","foodServiceGetRequest","form","formReducer","Boolean","window","location","hostname","match","InputBox","error","_ref","touched","react_default","a","createElement","className","Object","assign","placeholder","this","props","input","renderError","meta","React","Component","PrimaryButton","buttonText","axios","create","baseURL","validate","formValues","errors","loginEmail","loginPassword","UserSignUpPage","handleFormSubmit","_this","userSignUp","onSubmit","Field","name","component","components_buttons_PrimaryButton","formWrapped","reduxForm","connect","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","wrap","_context2","prev","next","stop","_x2","apply","VendorSignupPersonalDetailPage","handleClickNext","destroyOnUnmount","forceUnregisterOnUnmount","VendorSignupVendorDetailPage","console","log","vendorSignUp","handleClickPrev","_ref3","_callee3","_context3","_x3","WizardForm","nextPage","vendorSignUpNextPage","prevPage","vendorSignUpPrevPage","signup_VendorSignupPersonalDetailPage","signup_VendorSignupVendorDetailPage","LoginPage","userLogin","Fragment","handleSubmit","href","react_router_dom","to","_callee","response","_context","userService","post","sent","_x","HeaderComponent","id","FoodCard","HomePage","getTopRatedFood","topFood","map","food","components_foodCard_FoodCard","key","image","price","description","item-name","components_header_HeaderComponent","class","renderFoodCard","values","_ref4","_callee4","_context4","get","_x4","App","react_router","path","exact","UserRegistrationPage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c41ccd5.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\nimport {reducer as formReducer} from 'redux-form';\n\n//reducers\nconst userServicePostRequests = (state={},action) => {\n    switch(action.type) {\n        case 'USER_LOGIN':\n            return action.payload;\n        case 'USER_SIGN_UP':\n            return action.payload;\n        case 'VENDOR_SIGN_UP':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst vendorSignUpPageChange = (state = 1,action) => {\n    if(action.type === 'NEXT_PAGE') {\n        return state+1;\n    }\n\n    else if(action.type === 'PREV_PAGE') {\n        return state-1;\n    }\n\n    else {\n        return state;\n    }\n}\n\nconst foodServiceGetRequest = (state={},action) => {\n    if(action.type === 'TOP_FOOD_MENU') {\n        return action.payload;\n    }\n\n    else {\n        return state;\n    }\n}\n\nexport default combineReducers({\n    //keys : reducer name\n    userServicePostRequests : userServicePostRequests,\n    vendorSignUpPageChange : vendorSignUpPageChange,\n    foodServiceGetRequest : foodServiceGetRequest,\n    form : formReducer\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './InputBox.scss';\n\nclass InputBox extends React.Component {\n\n    renderError({error,touched}) {\n        if(touched && error) {\n            return(\n                <span className=\"input-box-error\">{error}</span>\n            )\n        }\n    }\n\n    render() {\n            return (\n            <label className=\"input-box-label\">\n                <input className=\"input-box\" placeholder={this.props.placeholder} type={this.props.type} {...this.props.input}/>\n                {this.renderError(this.props.meta)}\n            </label>\n            )\n        }\n    }\n\nexport default InputBox;","import React from 'react';\nimport './PrimaryButton.scss';\n\nconst PrimaryButton = props => {\n    return (\n        <button type={props.type} className=\"button-primary\">{props.buttonText}</button>\n    )\n}\n\nexport default PrimaryButton;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: '//localhost:9000/api/users',\n})","const validate = (formValues) => {\n    const errors={}\n    \n    if(!formValues.loginEmail) {\n        errors.loginEmail = 'Please enter a valid email';\n    }\n\n    if(!formValues.loginPassword) {\n        errors.loginPassword = 'Please enter a password';\n    }\n\n    return errors;\n}\n\nexport default validate;","import React from 'react';\nimport './UserSignupPage.scss';\nimport InputBox from '../input/InputBox';\nimport PrimaryButton from '../buttons/PrimaryButton';\nimport {userSignUp} from '../../actions';\nimport validate from '../input/validateInput';\n\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {Field ,reduxForm} from 'redux-form';\n\nclass UserSignUpPage extends React.Component {\n\n    handleFormSubmit = (formValues) => {\n        this.props.userSignUp(formValues);\n    }\n\n    render() {\n        return(\n            <div className=\"user-signup-container\">\n                <div className=\"bg-image\"/>\n                <p className=\"user-signup-heading\">&#123; Food_Rev &#125;</p>\n                <p className=\"user-signup-subheading\">User Sign Up</p>\n                <form onSubmit={this.handleFormSubmit} className=\"user-signup-form\">\n                    <Field name=\"userSignupName\" placeholder=\"Name\" type=\"text\" component={InputBox}/>\n                    <Field name=\"userSignupEmail\" placeholder=\"Email\" type=\"email\" component={InputBox}/>\n                    <Field name=\"userSignupPassword\" placeholder=\"Password\" type=\"password\" component={InputBox}/>\n                    <Field name=\"userSignupConfirmPassword\" placeholder=\"Confirm Password\" type=\"password\" component={InputBox}/>\n                    <Field name=\"userSignupPhone\" placeholder=\"Phone number\" type=\"number\" component={InputBox}/>\n                    <PrimaryButton type=\"submit\" buttonText=\"Sign Up\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {userServicePostRequests: state.userServicePostRequests}\n}\n\nconst formWrapped = reduxForm({\n    form: 'userSignup',\n    validate\n})(UserSignUpPage);\n\nexport default connect(mapStateToProps,{userSignUp})(formWrapped)","import userService from '../api/userService';\nimport { SIGN_IN,USER_LOGIN,USER_SIGN_UP,VENDOR_SIGN_UP,NEXT_PAGE,PREV_PAGE,TOP_FOOD_MENU} from './types';\n\n//action creators\n\nexport const signIn = (userId) => {\n    return {\n        type : SIGN_IN,\n        payload : userId\n    }\n}\n\nexport const vendorSignUpNextPage = () => {\n    return {\n        type : NEXT_PAGE\n    }\n}\n\nexport const vendorSignUpPrevPage = () => {\n    return {\n        type : PREV_PAGE\n    }\n}\n\n//function returning a function using redux-thunk\nexport const userLogin = formValues => async dispatch => {\n    const response = await userService.post('/login',formValues);\n    dispatch({type: USER_LOGIN , payload: response })\n};\n\nexport const userSignUp = formValues => async dispatch => {\n    //const response = await userService.post('/users/signup',formValues);\n    dispatch({type: USER_SIGN_UP , payload: 'response' })\n};\n\nexport const vendorSignUp = formValues => async dispatch => {\n    //const response = await userService.post('/users/signup',formValues);\n    dispatch({type: VENDOR_SIGN_UP , payload: 'response' })\n};\n\nexport const getTopRatedFood = () => async dispatch => {\n    const response = await userService.get('/food-service/top-food');\n    dispatch({type: TOP_FOOD_MENU , payload: response })\n};\n//return an action\n\n//export the action","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const USER_LOGIN = 'USER_LOGIN';\nexport const USER_SIGN_UP = 'USER_SIGN_UP';\nexport const VENDOR_SIGN_UP = 'VENDOR_SIGN_UP';\nexport const NEXT_PAGE = 'NEXT_PAGE';\nexport const PREV_PAGE = 'PREV_PAGE';\nexport const TOP_FOOD_MENU = 'TOP_FOOD_MENU';\n","import React from 'react';\nimport './VendorSignupPage.scss';\nimport InputBox from '../input/InputBox';\nimport PrimaryButton from '../buttons/PrimaryButton';\nimport validate from '../input/validateInput';\n\nimport {Field ,reduxForm} from 'redux-form';\n\n\nclass VendorSignupPersonalDetailPage extends React.Component {\n\n    render() {\n        return(\n            <div className=\"vendor-signup-container\">\n                <div className=\"bg-image\"/>\n                <p className=\"vendor-signup-heading\">&#123; Food_Rev &#125;</p>\n                <p className=\"vendor-signup-subheading\">Vendor Sign Up</p>\n                <p className=\"vendor-signup-form-subheading\">Personal Details</p>\n                <form onSubmit={this.props.handleClickNext}>\n                    <Field component={InputBox} placeholder=\"Vendor Name\" name=\"vendorSignupName\" type=\"text\"/>\n                    <Field component={InputBox} placeholder=\"Email\" name=\"vendorSignupEmail\" type=\"email\"/>\n                    <Field component={InputBox} placeholder=\"Password\" name=\"vendorSignupPassword\" type=\"password\"/>\n                    <Field component={InputBox} placeholder=\"Confirm Password\" name=\"vendorSignupConfirmPassword\" type=\"password\"/>\n                    <Field component={InputBox} placeholder=\"Phone Number\" name=\"vendorSignupPhone\" type=\"number\"/>\n                    <PrimaryButton type=\"submit\" buttonText=\"Next >\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default reduxForm({\n    form: 'vendorWizardForm', \n    destroyOnUnmount: false,            //  preserve form data\n    forceUnregisterOnUnmount: true,    // unregister fields on unmount\n    validate\n  })(VendorSignupPersonalDetailPage);","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport InputBox from '../input/InputBox';\nimport PrimaryButton from '../buttons/PrimaryButton';\nimport {vendorSignUp} from '../../actions';\n\nimport {connect} from 'react-redux';\n\nclass VendorSignupVendorDetailPage extends React.Component {\n\n    handleFormSubmit = formValues => {\n        console.log(\"hello\");\n        this.props.vendorSignUp(formValues);\n    }\n\n    render() {\n        return (\n            <div className=\"vendor-signup-container\">\n                <div className=\"bg-image\"/>\n                <p className=\"vendor-signup-heading\">&#123; Food_Rev &#125;</p>\n                <p className=\"vendor-signup-subheading\">Vendor Sign Up</p>\n                <p className=\"vendor-signup-form-subheading\">Vendor Details</p>\n                <form onSubmit={this.props.handleClickPrev}>\n                    <Field name=\"VendorShopName\" component={InputBox} placeholder=\"Shop Name\"/>\n                    <Field name=\"VendorOrganisationName\" component={InputBox} placeholder=\"Organisation name\"/>\n                    <PrimaryButton type=\"submit\" buttonText=\"< Back\"/>\n                    <PrimaryButton type=\"button\" buttonText=\"Submit\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {userServicePostRequests: state.userServicePostRequests}\n}\n\nconst formWrapped = reduxForm({\n    form: 'vendorWizardForm',\n    destroyOnUnmount: false,    // preserve form data\n    forceUnregisterOnUnmount: true, // unregister fields on unmount\n  })(VendorSignupVendorDetailPage);\n\nexport default connect(mapStateToProps,{vendorSignUp})(formWrapped)","import React from 'react';\nimport {vendorSignUpNextPage} from '../../actions';\nimport {vendorSignUpPrevPage} from '../../actions';\n\nimport {connect} from 'react-redux';\nimport VendorSignupPersonalDetailPage from './VendorSignupPersonalDetailPage';\nimport VendorSignupVendorDetailPage from './VendorSignupVendorDetailPage';\n\nclass WizardForm extends React.Component {\n\n    nextPage=()=> {\n        this.props.vendorSignUpNextPage();\n    }\n\n    prevPage=()=> {\n        this.props.vendorSignUpPrevPage();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.vendorSignUpPageChange===1 && <VendorSignupPersonalDetailPage handleClickNext={this.nextPage}/>}\n                {this.props.vendorSignUpPageChange===2 && <VendorSignupVendorDetailPage handleClickPrev={this.prevPage}/>}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {vendorSignUpPageChange: state.vendorSignUpPageChange}\n}\n\nexport default connect(mapStateToProps,{vendorSignUpNextPage,vendorSignUpPrevPage})(WizardForm);","import React from 'react';\nimport './LoginPage.scss';\nimport '../../common/styles.scss';\nimport PrimaryButton from '../buttons/PrimaryButton';\nimport InputBox from '../input/InputBox';\nimport {userLogin} from '../../actions';\nimport validate from '../input/validateInput';\n\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {Field ,reduxForm} from 'redux-form';\n\nclass LoginPage extends React.Component {\n\n    handleFormSubmit = (formValues) => {\n        this.props.userLogin(formValues);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <div className=\"bg-image\"/>\n            <div className=\"login-container\">\n                <p className=\"login-heading\">&#123; Food_Rev &#125;</p>\n                <p className=\"login-subheading\">Sign in</p>\n                <form onSubmit={this.props.handleSubmit(this.handleFormSubmit)} className=\"login-form\">\n                    <Field name=\"loginEmail\" placeholder=\"Email\" type=\"email\" component={InputBox}/>\n                    <Field name=\"loginPassword\" placeholder=\"password\" type=\"password\" component={InputBox}/>\n                    <PrimaryButton type=\"submit\" buttonText=\"Login\"/>\n                </form>\n                <a href=\"/\" className=\"login-forgot-password\">Forgot Password ?</a>\n                <div className=\"login-sign-up-container\">\n                    <p className=\"login-sign-up-heading\">Sign Up</p>\n                    <Link to=\"/signup/user\" className=\"login-sign-up-user\">as a User</Link>\n                    <p>OR</p>\n                    <Link to=\"/signup/vendor\" className=\"login-sign-up-vendor\">as a Vendor</Link>\n                </div>\n            </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {userServicePostRequests: state.userServicePostRequests}\n}\n\nconst formWrapped = reduxForm({\n    form: 'login',\n    validate\n})(LoginPage);\n\nexport default connect(mapStateToProps,{userLogin})(formWrapped)","import React from 'react';\nimport './HeaderComponent.scss';\n\nclass HeaderComponent extends React.Component {\n\nrender() {\n    return (\n        <header id=\"header\">\n            <div>\n                <div className=\"hamburger-container\">\n                    <div className=\"hamburger-icon-1\"></div>\n                    <div className=\"hamburger-icon-2\"></div>\n                    <div className=\"hamburger-icon-3\"></div>\n                </div>\n            </div>\n        </header>\n    )\n    }\n};\n\nexport default HeaderComponent;","import React from 'react';\nimport './FoodCard.scss';\n\nclass FoodCard extends React.Component {\n\n    render() {\n        return (\n            <section className=\"food-card\">\n                <div className=\"food-card-header\">\n                    \n                </div>\n                <div className=\"food-card-body\">\n\n                </div>\n                <div className=\"food-card-footer\">\n\n                </div>\n            </section>\n        )       \n    }\n}\n\nexport default FoodCard;","import React from 'react'\nimport HeaderComponent from '../header/HeaderComponent'\nimport FoodCard from '../foodCard/FoodCard'\n\nimport {connect} from 'react-redux';\nimport {getTopRatedFood} from '../../actions'\nclass HomePage extends React.Component {\n\n    componentDidMount() {\n        this.props.getTopRatedFood();\n    }\n\n    renderFoodCard() {\n        return this.props.topFood.map(food=>{\n            return <FoodCard key={food.id} image={food.image} price={food.price} description={food.description} item-name={food.name} type={food.type}/>\n        })\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <HeaderComponent/>\n                <div class=\"home-top-foods-container\">{this.renderFoodCard()}</div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {topFood: Object.values(state.foodServiceGetRequest)}\n}\n\nexport default connect(mapStateToProps,{getTopRatedFood})(HomePage);","import React from 'react';\nimport UserRegistrationPage from './signup/UserSignupPage';\nimport WizardForm from '../components/signup/WizardForm';\nimport LoginPage from '../components/login/LoginPage';\nimport HomePage from '../components/home/HomePage';\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nconst App = () => {\n    return(\n        <BrowserRouter>\n            <div>\n                <Route path=\"/\" exact component={LoginPage}/>\n                <Route path=\"/home\" component={HomePage}/>\n                <Route path=\"/signup/user\" component={UserRegistrationPage}/>\n                <Route path=\"/signup/vendor\" component={WizardForm}/>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport reducers from './reducers';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><App/></Provider> , document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}